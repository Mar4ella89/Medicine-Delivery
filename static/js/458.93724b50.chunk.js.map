{"version":3,"file":"static/js/458.93724b50.chunk.js","mappings":"qIACA,QAA4B,6B,aCC5B,MAIA,EAJkBA,IAAmB,IAAlB,SAAEC,GAAUD,EAC7B,OAAOE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcH,SAAEA,GAAe,C,qFCFxD,SAAgB,gBAAkB,uCAAuC,QAAU,+BAA+B,aAAe,oCAAoC,aAAe,oCAAoC,IAAM,2BAA2B,YAAc,mCAAmC,SAAW,gCAAgC,cAAgB,qCAAqC,SAAW,gCAAgC,MAAQ,6BAA6B,OAAS,8BAA8B,OAAS,8BAA8B,UAAY,iCAAiC,IAAM,2BAA2B,MAAQ,6BAA6B,WAAa,mC,aCKxqB,MAyGA,EAzGsBI,KACpB,MAAM,UAAEC,EAAS,eAAEC,EAAc,eAAEC,IAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,GAuB3DC,EAAWL,EAAUM,KACzBZ,IAAA,IAAC,IAAEa,EAAG,KAAEC,EAAI,OAAEC,EAAM,SAAEC,EAAQ,MAAEC,EAAK,WAAEC,GAAYlB,EAAA,OACjDE,EAAAA,EAAAA,KAAA,MAAoBC,UAAWC,EAAIe,aAAalB,UAC9CmB,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAIiB,QAAQpB,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKoB,IAAKP,EAAQQ,IAAKT,EAAMU,MAAO,IAAKrB,UAAWC,EAAIqB,OAExDL,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAIsB,YAAYzB,SAAA,EAC9BmB,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAIuB,SAAS1B,SAAEa,KAC9BM,EAAAA,EAAAA,MAAA,KAAGjB,UAAWC,EAAIa,MAAMhB,SAAA,CAAEgB,EAAM,YAElCf,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAIwB,cAAc3B,UAChCmB,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAIyB,gBAAgB5B,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EAAI0B,OACfC,QAASA,IArBMC,EAACC,EAAYjB,KACtCA,EAAW,GACbR,EAAeyB,EAAYjB,EAAW,EACxC,EAkB6BgB,CAAuBnB,EAAKG,GAAUf,SACtD,OAGDC,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAI8B,MACfC,KAAK,SACLC,MAAOpB,EACPqB,SAAUC,GAxCGC,EAACN,EAAYK,KACxC,MAAME,EAAcC,SAASH,EAAMI,OAAON,OACtCI,EAAc,GAChBhC,EAAeyB,EAAYO,EAC7B,EAoCiCD,CAAqB1B,EAAKyB,GAC7CK,IAAI,IACJC,IAAI,KACJC,UAAQ,KAEV3C,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EAAI0B,OACfC,QAASA,IAxCMe,EAACb,EAAYjB,KAC1CR,EAAeyB,EAAYjB,EAAW,EAAE,EAuCX8B,CAAuBjC,EAAKG,GAAUf,SACtD,eAMPmB,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAI2C,OAAO9C,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UACEiC,KAAK,SACLhC,UAAWC,EAAI4C,SACfjB,QAASA,KA7DnBxB,EA6D2CM,EAAK,EAAAZ,SACvC,YAGDmB,EAAAA,EAAAA,MAAA,KAAAnB,SAAA,CAAIiB,EAAW+B,QAAQ,GAAG,eA3CvBpC,EAAM,IA8CV,IAIHqC,EAAa5C,EAAU6C,QAAO,CAACC,EAAKC,IACjCD,EAAMC,EAAKnC,YACjB,GAEGoC,EAAgBhD,EAAU6C,QAAO,CAACC,EAAKC,IACpCD,EAAMC,EAAKrC,UACjB,GAEH,OACEI,EAAAA,EAAAA,MAAA,WAASjB,UAAWC,EAAImD,gBAAgBtD,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAIoD,aAAavD,SAAEU,IACjCL,EAAUmD,QACTrC,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAIsD,UAAUzD,SAAA,EAC5BmB,EAAAA,EAAAA,MAAA,KAAAnB,SAAA,CAAG,uBAEDmB,EAAAA,EAAAA,MAAA,QAAMjB,UAAWC,EAAIgD,IAAInD,SAAA,CAAC,IAAEqD,EAAc,OAAQ,WAEpDlC,EAAAA,EAAAA,MAAA,KAAGjB,UAAWC,EAAIc,WAAWjB,SAAA,CAAC,gBAE5BmB,EAAAA,EAAAA,MAAA,QAAMjB,UAAWC,EAAIgD,IAAInD,SAAA,CAAC,IAAEiD,EAAWD,QAAQ,GAAG,OAAQ,YAI9D/C,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAIuD,MAAM1D,SAAC,kDAEnB,E,sBCzGd,MAAM2D,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,yDAETC,OAAQ,CACNC,MAAO,MCLX,GAAgB,QAAU,2BAA2B,MAAQ,yBAAyB,OAAS,0BAA0B,MAAQ,yBAAyB,UAAY,6BAA6B,UAAY,6BAA6B,MAAQ,0BCU9OC,EAAkB,CACtB,qBACA,sBACA,YAGIC,EAAaC,EAAAA,KAAaC,MAAM,CACpCvD,KAAMsD,EAAAA,KAAavB,SAAS,oBAC5ByB,SAAUF,EAAAA,KAAavB,SAAS,yBAChC0B,MAAOH,EAAAA,KAEJG,MAAM,wBACN1B,SAAS,qBACZ2B,MAAOJ,EAAAA,KAEJzB,IAAI,GAAI,+CACRC,IAAI,GAAI,8CACR6B,QACC,WACA,gEAED5B,SAAS,4BACZ6B,eAAgBN,EAAAA,KAEbO,MAAMT,EAAiB,yCACvBrB,SAAS,kEACZ+B,QAASR,EAAAA,KAAavB,SAAS,yBAG3BgC,EAAgB,CACpB/D,KAAM,GACNwD,SAAU,GACVC,MAAO,GACPC,MAAO,GACPE,eAAgB,KAChBE,QAAS,IAyJX,EAtJkBE,KAChB,MAAM,UAAExE,IAAcG,EAAAA,EAAAA,YAAWC,EAAAA,GAoCjC,OACER,EAAAA,EAAAA,KAAA,WAASC,UAAWC,EAAI2E,QAAQ9E,UAC9BC,EAAAA,EAAAA,KAAC8E,EAAAA,GAAM,CACLH,cAAeA,EACfI,iBAAkBd,EAClBe,SAxCeC,MAAOC,EAAMpF,KAAoC,IAAlC,cAAEqF,EAAa,UAAEC,GAAWtF,EAC9D,IACE,MAAMuF,EAAY,CAChBC,SAAU,CACR1E,KAAMsE,EAAOtE,KACbwD,SAAUc,EAAOd,SACjBC,MAAOa,EAAOb,MACdC,MAAOY,EAAOZ,MACdE,eAAgBU,EAAOV,eACvBE,QAASQ,EAAOR,SAElBjB,MAAO,CACL8B,MAAOnF,EAAUM,KAAIyC,IAAI,CACvBrC,SAAUqC,EAAKrC,SACfE,WAAYmC,EAAKnC,WACjBe,WAAYoB,EAAKxC,QAEnB6E,gBAAiBpF,EAAU6C,QACzB,CAACC,EAAKC,IAASD,EAAMC,EAAKnC,YAC1B,UFvDYiE,WACtB,IACE,MAAQQ,KAAMC,SAAiBhC,EAASiC,KAAK,IAAKF,GAClD,OAAOC,CACT,CAAE,MAAOE,GAEP,MADAC,QAAQD,MAAM,0BAA2BA,GACnCA,CACR,GEqDUE,CAAST,GACfU,EAAAA,GAAMC,QAAQ,iCACdZ,GACF,CAAE,MAAOQ,GACPC,QAAQD,MAAM,0BAA2BA,GACzCG,EAAAA,GAAME,QAAQ,4CAChB,CAAC,QACCd,GAAc,EAChB,GAQ2BpF,SAEtBmG,IAAA,IAAC,aAAEC,GAAcD,EAAA,OAChBhF,EAAAA,EAAAA,MAACkF,EAAAA,GAAI,CAAArG,SAAA,EACHmB,EAAAA,EAAAA,MAAA,SAAOjB,UAAWC,EAAImG,MAAMtG,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAIoG,UAAUvG,SAAC,UAChCC,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CACJtG,UAAWC,EAAIsG,MACf5F,KAAK,OACL6F,UAAU,KACVxE,KAAK,OACLyE,YAAY,UAEd1G,EAAAA,EAAAA,KAAC2G,EAAAA,GAAY,CAAC/F,KAAK,OAAOgG,UAAU,MAAM3G,UAAWC,EAAI0F,YAE3D1E,EAAAA,EAAAA,MAAA,SAAOjB,UAAWC,EAAImG,MAAMtG,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAIoG,UAAUvG,SAAC,eAChCC,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CACJtG,UAAWC,EAAIsG,MACf5F,KAAK,WACL6F,UAAU,KACVxE,KAAK,OACLyE,YAAY,eAEd1G,EAAAA,EAAAA,KAAC2G,EAAAA,GAAY,CACX/F,KAAK,WACLgG,UAAU,MACV3G,UAAWC,EAAI0F,YAGnB1E,EAAAA,EAAAA,MAAA,SAAOjB,UAAWC,EAAImG,MAAMtG,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAIoG,UAAUvG,SAAC,WAChCC,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CACJtG,UAAWC,EAAIsG,MACf5F,KAAK,QACL6F,UAAU,KACVxE,KAAK,QACLyE,YAAY,WAEd1G,EAAAA,EAAAA,KAAC2G,EAAAA,GAAY,CACX/F,KAAK,QACLgG,UAAU,MACV3G,UAAWC,EAAI0F,YAGnB1E,EAAAA,EAAAA,MAAA,SAAOjB,UAAWC,EAAImG,MAAMtG,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAIoG,UAAUvG,SAAC,WAChCC,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CACJtG,UAAWC,EAAIsG,MACf5F,KAAK,QACL6F,UAAU,KACVxE,KAAK,OACLyE,YAAY,WAEd1G,EAAAA,EAAAA,KAAC2G,EAAAA,GAAY,CACX/F,KAAK,QACLgG,UAAU,MACV3G,UAAWC,EAAI0F,YAGnB1E,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAEJC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAI2G,MAAM9G,SACvBiE,EAAgBtD,KAAIoG,IAEjB5F,EAAAA,EAAAA,MAAA,SAAoBjB,UAAWC,EAAI6G,WAAWhH,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAI8G,UAAUjH,SAAE+G,KACjC9G,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CACJtG,UAAWC,EAAIsG,MACfvE,KAAK,QACLrB,KAAK,iBACLsB,MAAO4E,MANCA,WAapB5F,EAAAA,EAAAA,MAAA,SAAOjB,UAAWC,EAAImG,MAAMtG,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAIoG,UAAUvG,SAAC,aAChCC,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CACJtG,UAAWC,EAAIsG,MACf5F,KAAK,UACLqB,KAAK,OACLyE,YAAY,aAEd1G,EAAAA,EAAAA,KAAC2G,EAAAA,GAAY,CACX/F,KAAK,UACLgG,UAAU,MACV3G,UAAWC,EAAI0F,YAInB5F,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EAAI0B,OACfK,KAAK,SACLgF,SAAUd,EAAapG,SACxB,aAGI,KAGH,E,aCjMd,MAuBA,EAvBkBD,IAAsB,IAArB,YAAEoH,GAAapH,EAChC,MAKM,SAAEqH,EAAQ,UAAEC,GAAcF,EAC5BA,EAAYG,YANW,CACzBF,SAAU,mBACVC,UAAW,mBAOb,OACEpH,EAAAA,EAAAA,KAACsH,EAAAA,GAAU,CAACC,iBAAkB,0CAA0CxH,UACtEC,EAAAA,EAAAA,KAACwH,EAAAA,GAAS,CACRC,kBAAmB,CAAEC,OAAQ,QAASC,aAAc,QACpDC,OAAQ,CAAEC,IAAKV,EAAUW,IAAKV,GAC9BW,KAAM,GAAGhI,UAETC,EAAAA,EAAAA,KAACgI,EAAAA,GAAM,CAACC,SAAU,CAAEJ,IAAKV,EAAUW,IAAKV,QAE/B,E,aCpBjB,SAAgB,WAAa,mCCoB7B,EAbsBc,KACpB,MAAM,aAAEC,EAAY,UAAEC,IAAc7H,EAAAA,EAAAA,YAAW8H,EAAAA,GAE/C,OACEnH,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAIoI,YAAYvI,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAIqI,WAAWxI,UAC7BC,EAAAA,EAAAA,KAACwI,EAAS,CAACtB,YAAaiB,EAAaC,QAEvCpI,EAAAA,EAAAA,KAAC4E,EAAS,MACN,E,OChBV,QAA0B,8BCoB1B,EAZqB6D,KAEjBvH,EAAAA,EAAAA,MAACwH,EAAAA,EAAS,CAAA3I,SAAA,EACRmB,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAYH,SAAA,EAC1BC,EAAAA,EAAAA,KAACkI,EAAa,KACdlI,EAAAA,EAAAA,KAACG,EAAa,QAEhBH,EAAAA,EAAAA,KAAC2I,EAAAA,GAAc,CAACC,UAAW,IAAMX,SAAS,mB","sources":["webpack://medicine-delivery/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://medicine-delivery/./src/components/OrderCardList/OrderCardList.module.css?f6b0","components/OrderCardList/OrderCardList.jsx","services/ordersAPI.js","webpack://medicine-delivery/./src/components/OrderForm/OrderForm.module.css?3a20","components/OrderForm/OrderForm.jsx","components/DrugOnMap/DrugOnMap.jsx","webpack://medicine-delivery/./src/components/OrderDrugForm/OrderDrugForm.module.css?d7de","components/OrderDrugForm/OrderDrugForm.jsx","webpack://medicine-delivery/./src/pages/ShoppingCart/ShoppingCart.module.css?2b24","pages/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n\nexport default Container;","// extracted by mini-css-extract-plugin\nexport default {\"sectionMedicine\":\"OrderCardList_sectionMedicine__n0g8s\",\"wrapper\":\"OrderCardList_wrapper__tefiF\",\"listMedicine\":\"OrderCardList_listMedicine__xy64k\",\"itemMedicine\":\"OrderCardList_itemMedicine__ZFM7N\",\"img\":\"OrderCardList_img__uN93P\",\"discription\":\"OrderCardList_discription__cmAz6\",\"subtitle\":\"OrderCardList_subtitle__aTMXm\",\"medicineOrder\":\"OrderCardList_medicineOrder__RLVRW\",\"btnOrder\":\"OrderCardList_btnOrder__ysNL5\",\"input\":\"OrderCardList_input__rG+zA\",\"button\":\"OrderCardList_button__7NsD9\",\"action\":\"OrderCardList_action__02Sat\",\"totalInfo\":\"OrderCardList_totalInfo__CSdG5\",\"sum\":\"OrderCardList_sum__2wcAq\",\"order\":\"OrderCardList_order__3PlIq\",\"totalPrice\":\"OrderCardList_totalPrice__9YrdE\"};","import { useContext } from 'react';\n\nimport CartContext from 'contexts/CartContext';\n\nimport css from './OrderCardList.module.css';\n\nconst OrderCardList = () => {\n  const { cartItems, removeFromCart, updateQuantity } = useContext(CartContext);\n\n  const handleRemoveClick = medicineId => {\n    removeFromCart(medicineId);\n  };\n\n  const handleQuantityChange = (medicineId, event) => {\n    const newQuantity = parseInt(event.target.value);\n    if (newQuantity > 0) {\n      updateQuantity(medicineId, newQuantity);\n    }\n  };\n\n  const handleQuantityIncrease = (medicineId, quantity) => {\n    updateQuantity(medicineId, quantity + 1);\n  };\n\n  const handleQuantityDecrease = (medicineId, quantity) => {\n    if (quantity > 1) {\n      updateQuantity(medicineId, quantity - 1);\n    }\n  };\n\n  const elements = cartItems.map(\n    ({ _id, name, imgUrl, quantity, price, totalPrice }) => (\n      <li key={_id + '1'} className={css.itemMedicine}>\n        <div className={css.wrapper}>\n          <img src={imgUrl} alt={name} width={145} className={css.img} />\n\n          <div className={css.discription}>\n            <div>\n              <h3 className={css.subtitle}>{name}</h3>\n              <p className={css.price}>{price} $</p>\n            </div>\n            <div className={css.medicineOrder}>\n              <div className={css.quantityWrapper}>\n                <button\n                  className={css.button}\n                  onClick={() => handleQuantityDecrease(_id, quantity)}\n                >\n                  -\n                </button>\n                <input\n                  className={css.input}\n                  type=\"number\"\n                  value={quantity}\n                  onChange={event => handleQuantityChange(_id, event)}\n                  min=\"1\"\n                  max=\"10\"\n                  required\n                />\n                <button\n                  className={css.button}\n                  onClick={() => handleQuantityIncrease(_id, quantity)}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className={css.action}>\n            <button\n              type=\"button\"\n              className={css.btnOrder}\n              onClick={() => handleRemoveClick(_id)}\n            >\n              Remove\n            </button>\n            <p>{totalPrice.toFixed(2)} $</p>\n          </div>\n        </div>\n      </li>\n    )\n  );\n\n  const priceTotal = cartItems.reduce((sum, item) => {\n    return sum + item.totalPrice;\n  }, 0);\n\n  const quantityTotal = cartItems.reduce((sum, item) => {\n    return sum + item.quantity;\n  }, 0);\n\n  return (\n    <section className={css.sectionMedicine}>\n      <ul className={css.listMedicine}>{elements}</ul>\n      {cartItems.length ? (\n        <div className={css.totalInfo}>\n          <p>\n            Selected medicines:\n            <span className={css.sum}> {quantityTotal} </span> pcs\n          </p>\n          <p className={css.totalPrice}>\n            Total price:\n            <span className={css.sum}> {priceTotal.toFixed(2)} </span> $\n          </p>\n        </div>\n      ) : (\n        <p className={css.order}>You don't have any item in your cart yet...</p>\n      )}\n    </section>\n  );\n};\n\nexport default OrderCardList;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://medicine-delivery-ztb4.onrender.com/api/orders',\n\n  params: {\n    limit: 12,\n  },\n});\n\nexport const allOrders = async () => {\n  const { data } = await instance.get(`/`);\n  return data;\n};\n\nexport const addOrder = async data => {\n  try {\n    const { data: result } = await instance.post('/', data);\n    return result;\n  } catch (error) {\n    console.error('Error submitting order:', error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"OrderForm_section__z4iBk\",\"field\":\"OrderForm_field__wTjiu\",\"button\":\"OrderForm_button__YYeSI\",\"radio\":\"OrderForm_radio__wxVyg\",\"fieldName\":\"OrderForm_fieldName__0L8Hv\",\"radioName\":\"OrderForm_radioName__GQv+d\",\"error\":\"OrderForm_error__hSeEH\"};","import { useContext } from 'react';\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { toast } from 'react-toastify';\n\nimport { addOrder } from 'services/ordersAPI';\nimport CartContext from 'contexts/CartContext';\n\nimport css from './OrderForm.module.css';\n\nconst deliveryMethod1 = [\n  'Pick up from store',\n  'Delivery to address',\n  'New Post',\n];\n\nconst userSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  lastName: yup.string().required('Last Name is required'),\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Email is required'),\n  phone: yup\n    .string()\n    .min(10, 'Phone number must be at least 10 characters')\n    .max(15, 'Phone number must not exceed 15 characters')\n    .matches(\n      /^\\+?\\d+$/,\n      'Phone number must contain only digits and may start with \"+\"'\n    )\n    .required('Phone number is required'),\n  deliveryMethod: yup\n    .string()\n    .oneOf(deliveryMethod1, 'Please select a valid delivery method')\n    .required('Delivery method is required. Please enter your delivery method'),\n  address: yup.string().required('Address is required'),\n});\n\nconst initialValues = {\n  name: '',\n  lastName: '',\n  email: '',\n  phone: '',\n  deliveryMethod: null,\n  address: '',\n};\n\nconst OrderForm = () => {\n  const { cartItems } = useContext(CartContext);\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      const orderData = {\n        customer: {\n          name: values.name,\n          lastName: values.lastName,\n          email: values.email,\n          phone: values.phone,\n          deliveryMethod: values.deliveryMethod,\n          address: values.address,\n        },\n        order: {\n          items: cartItems.map(item => ({\n            quantity: item.quantity,\n            totalPrice: item.totalPrice,\n            medicineId: item._id,\n          })),\n          totalOrderPrice: cartItems.reduce(\n            (sum, item) => sum + item.totalPrice,\n            0\n          ),\n        },\n      };\n\n      await addOrder(orderData);\n      toast.success('Order submitted successfully!');\n      resetForm();\n    } catch (error) {\n      console.error('Failed to submit order:', error);\n      toast.warning('Failed to submit order. Please try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <section className={css.section}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={userSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <label className={css.label}>\n              <span className={css.fieldName}>Name</span>\n              <Field\n                className={css.field}\n                name=\"name\"\n                maxLength=\"20\"\n                type=\"text\"\n                placeholder=\"Name\"\n              />\n              <ErrorMessage name=\"name\" component=\"div\" className={css.error} />\n            </label>\n            <label className={css.label}>\n              <span className={css.fieldName}>Last Name</span>\n              <Field\n                className={css.field}\n                name=\"lastName\"\n                maxLength=\"30\"\n                type=\"text\"\n                placeholder=\"Last Name\"\n              />\n              <ErrorMessage\n                name=\"lastName\"\n                component=\"div\"\n                className={css.error}\n              />\n            </label>\n            <label className={css.label}>\n              <span className={css.fieldName}>Email</span>\n              <Field\n                className={css.field}\n                name=\"email\"\n                maxLength=\"50\"\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={css.error}\n              />\n            </label>\n            <label className={css.label}>\n              <span className={css.fieldName}>Phone</span>\n              <Field\n                className={css.field}\n                name=\"phone\"\n                maxLength=\"15\"\n                type=\"text\"\n                placeholder=\"Phone\"\n              />\n              <ErrorMessage\n                name=\"phone\"\n                component=\"div\"\n                className={css.error}\n              />\n            </label>\n            <div>\n              <h3>Choose delivery method</h3>\n\n              <div className={css.radio}>\n                {deliveryMethod1.map(method => {\n                  return (\n                    <label key={method} className={css.radioLabel}>\n                      <span className={css.radioName}>{method}</span>\n                      <Field\n                        className={css.field}\n                        type=\"radio\"\n                        name=\"deliveryMethod\"\n                        value={method}\n                      />\n                    </label>\n                  );\n                })}\n              </div>\n            </div>\n            <label className={css.label}>\n              <span className={css.fieldName}>Address</span>\n              <Field\n                className={css.field}\n                name=\"address\"\n                type=\"text\"\n                placeholder=\"Address\"\n              />\n              <ErrorMessage\n                name=\"address\"\n                component=\"div\"\n                className={css.error}\n              />\n            </label>\n\n            <button\n              className={css.button}\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </section>\n  );\n};\n\nexport default OrderForm;\n","import { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst DrugOnMap = ({ currentDrug }) => {\n  const defaultCoorditates = {\n    latitude: 50.442226451645666,\n    longitude: 30.53763616537363,\n  };\n\n  const { latitude, longitude } = currentDrug\n    ? currentDrug.coordinates\n    : defaultCoorditates;\n\n  return (\n    <LoadScript googleMapsApiKey={'AIzaSyDKYZdu5xvm8s02742nhLWHdNVizpgEgsM'}>\n      <GoogleMap\n        mapContainerStyle={{ height: '400px', borderRadius: '10px' }}\n        center={{ lat: latitude, lng: longitude }}\n        zoom={15}\n      >\n        <Marker position={{ lat: latitude, lng: longitude }} />\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default DrugOnMap;\n","// extracted by mini-css-extract-plugin\nexport default {\"mapWrapper\":\"OrderDrugForm_mapWrapper__lUPfB\"};","import { useContext } from 'react';\n\nimport OrderForm from 'components/OrderForm/OrderForm';\nimport DrugOnMap from 'components/DrugOnMap/DrugOnMap';\nimport DrugContext from 'contexts/DrugContext';\n\nimport css from './OrderDrugForm.module.css';\n\nconst OrderDrugForm = () => {\n  const { filteredDrug, drugsItem } = useContext(DrugContext);\n\n  return (\n    <div className={css.formWrapper}>\n      <div className={css.mapWrapper}>\n        <DrugOnMap currentDrug={filteredDrug(drugsItem)} />\n      </div>\n      <OrderForm />\n    </div>\n  );\n};\n\nexport default OrderDrugForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ShoppingCart_wrapper__RX6W7\"};","import { ToastContainer } from 'react-toastify';\n\nimport Container from 'components/Container/Container';\nimport OrderCardList from 'components/OrderCardList/OrderCardList';\nimport OrderDrugForm from 'components/OrderDrugForm/OrderDrugForm';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './ShoppingCart.module.css';\n\nconst ShoppingCart = () => {\n  return (\n    <Container>\n      <div className={css.wrapper}>\n        <OrderDrugForm />\n        <OrderCardList />\n      </div>\n      <ToastContainer autoClose={3000} position=\"bottom-right\" />\n    </Container>\n  );\n};\n\nexport default ShoppingCart;\n"],"names":["_ref","children","_jsx","className","css","OrderCardList","cartItems","removeFromCart","updateQuantity","useContext","CartContext","elements","map","_id","name","imgUrl","quantity","price","totalPrice","itemMedicine","_jsxs","wrapper","src","alt","width","img","discription","subtitle","medicineOrder","quantityWrapper","button","onClick","handleQuantityDecrease","medicineId","input","type","value","onChange","event","handleQuantityChange","newQuantity","parseInt","target","min","max","required","handleQuantityIncrease","action","btnOrder","toFixed","priceTotal","reduce","sum","item","quantityTotal","sectionMedicine","listMedicine","length","totalInfo","order","instance","axios","create","baseURL","params","limit","deliveryMethod1","userSchema","yup","shape","lastName","email","phone","matches","deliveryMethod","oneOf","address","initialValues","OrderForm","section","Formik","validationSchema","onSubmit","async","values","setSubmitting","resetForm","orderData","customer","items","totalOrderPrice","data","result","post","error","console","addOrder","toast","success","warning","_ref2","isSubmitting","Form","label","fieldName","Field","field","maxLength","placeholder","ErrorMessage","component","radio","method","radioLabel","radioName","disabled","currentDrug","latitude","longitude","coordinates","LoadScript","googleMapsApiKey","GoogleMap","mapContainerStyle","height","borderRadius","center","lat","lng","zoom","Marker","position","OrderDrugForm","filteredDrug","drugsItem","DrugContext","formWrapper","mapWrapper","DrugOnMap","ShoppingCart","Container","ToastContainer","autoClose"],"sourceRoot":""}